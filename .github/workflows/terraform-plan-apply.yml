on:
  push:
    branches:
      - main

env:
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  terraform-plan:
    runs-on: ubuntu-latest

    steps:
    # checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Login to Azure via Azure CLI
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    # initialize a new or existing Terraform working directory by creating initial files, downloading remote state files and working with plugin modules
    - name: Terraform Init
      id: init
      run: terraform init

    # generate an execution plan
    - name: Terraform Plan
      id: plan
      run: terraform plan -input=false

    # save plan to artifacts
    - name: Save Plan
      uses: actions/upload-artifact@v2
      with:
        name: plan
        path: plan

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-plan

    steps:
    # checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # install latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0
    
    # initialize a new or existing Terraform working directory by creating initial files, downloading remote state files and working with plugin modules
    - name: Terraform Init
      id: init
      run: terraform init

    # download saved plan from artifacts
    - name: Download Plan
      uses: actions/download-artifact@v2
      with:
        name: plan
        path: plan
    
    # terraform apply
    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve tfplan
